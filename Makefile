.DEFAULT_GOAL := help
SHELL := /bin/bash

.PHONY: help
help:
	@cat $(MAKEFILE_LIST) | grep -E '^[a-zA-Z_-]+:.*?## .*$$' | sort | awk 'BEGIN {FS = ":.*?## "}; {printf "\033[36m%-30s\033[0m %s\n", $$1, $$2}'

.PHONY: lint-black
lint-black:
	black --config pyproject.toml --check .

.PHONY: lint-flake
lint-flake:
	flake8 .

.PHONY: order-check
order-check:
	isort --check-only .

.PHONY: type-check
type-check:
	mypy ./

.PHONY: test-serial
test-serial:
	py.test --disable-pytest-warnings --cov=app --cov-report=term-missing tests/ --junitxml=test_results_serial.xml -v --maxfail=10 -m "serial"

.PHONY: test-concurrent
test-concurrent:
	py.test --disable-pytest-warnings --cov=app --cov-report=term-missing tests/ --junitxml=test_results.xml -n4 -v --maxfail=10 -m "not serial"


.PHONY: freeze-requirements
freeze-requirements:
	rm -rf venv-freeze
	virtualenv -p python3 venv-freeze
	# Make sure we are using the latest pip prior to requirements installation.
	$$(pwd)/venv-freeze/bin/python3 -m pip install --upgrade pip
	$$(pwd)/venv-freeze/bin/pip install -r requirements-app.txt --no-cache-dir
	echo '# pyup: ignore file' > requirements.txt
	echo '# This file is autogenerated. Do not edit it manually.' >> requirements.txt
	cat requirements-app.txt >> requirements.txt
	echo '' >> requirements.txt
	$$(pwd)/venv-freeze/bin/pip freeze -r <(sed '/^--/d' requirements-app.txt) | sed -n '/The following requirements were added by pip freeze/,$$p' >> requirements.txt
	rm -rf venv-freeze

.PHONY: test-requirements
test-requirements:
	@diff requirements-app.txt requirements.txt | grep '<' \
	    && { echo "requirements.txt doesn't match requirements-app.txt."; \
	         echo "Run 'make freeze-requirements' to update."; exit 1; } \
|| { echo "requirements.txt is up to date"; exit 0; }

.PHONY: coverage
coverage: venv ## Create coverage report
	. venv/bin/activate && coveralls

.PHONY: clean
clean:
	rm -rf node_modules cache target venv .coverage build tests/.cache

.PHONY: format
format:
	isort .
	black --config pyproject.toml .
	flake8 .

.PHONY: smoke-test
smoke-test:
	cd tests_smoke && python smoke_test.py

.PHONY: run
run:
	flask run -p 6011 --host=0.0.0.0
