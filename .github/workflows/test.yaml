name: ci

on: push

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Build and export
        uses: docker/build-push-action@v3
        with:
          context: .
          tags: notification-api:latest
          outputs: type=docker,dest=/tmp/notification-api.tar
          cache-from: type=gha
          cache-to: type=gha,mode=max
      -
        name: Cache image
        id: notif-api-docker
        uses: actions/cache@v3
        with:
          path: /tmp/notification-api.tar
          key: ${{ github.sha }}-api
  test:
    runs-on: ubuntu-latest
    needs: build
    services:
      redis:
        # Docker Hub image
        image: redis
        # Set health checks to wait until redis has started
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      postgres:
        image: postgres:13.4
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_notification_api
        ports:
        - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
      - uses: docker/setup-buildx-action@v2
      - uses: actions/cache@v3
        with:
          path: /tmp/notification-api.tar
          key: ${{ github.sha }}-api
      - run: docker load --input /tmp/notification-api.tar
      - run: docker run --rm notification-api:latest make test
