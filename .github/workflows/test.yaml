name: ci

on: push

env:
  SQLALCHEMY_TEST_DATABASE_URI: postgresql://postgres:postgres@localhost:5432/test_notification_api

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: docker/setup-buildx-action@v2
      - uses: docker/build-push-action@v3
        with:
          context: .
          tags: notification-api:latest
          build-args: GIT_SHA=${{ github.sha }}
          outputs: type=docker,dest=/tmp/notification-api.tar
          cache-from: type=gha
          cache-to: type=gha,mode=max
      -
        name: Cache image
        id: notif-api-docker
        uses: actions/cache@v3
        with:
          path: /tmp/notification-api.tar
          key: ${{ github.sha }}-api
  lint-black:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: docker/setup-buildx-action@v2
      - uses: actions/cache@v3
        with:
          path: /tmp/notification-api.tar
          key: ${{ github.sha }}-api
      - run: docker load --input /tmp/notification-api.tar
      - run: docker run --rm notification-api:latest make lint-black
  lint-flake:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: docker/setup-buildx-action@v2
      - uses: actions/cache@v3
        with:
          path: /tmp/notification-api.tar
          key: ${{ github.sha }}-api
      - run: docker load --input /tmp/notification-api.tar
      - run: docker run --rm notification-api:latest make lint-flake
  order-check:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: docker/setup-buildx-action@v2
      - uses: actions/cache@v3
        with:
          path: /tmp/notification-api.tar
          key: ${{ github.sha }}-api
      - run: docker load --input /tmp/notification-api.tar
      - run: docker run --rm notification-api:latest make order-check
  type-check:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: docker/setup-buildx-action@v2
      - uses: actions/cache@v3
        with:
          path: /tmp/notification-api.tar
          key: ${{ github.sha }}-api
      - run: docker load --input /tmp/notification-api.tar
      - run: docker run --rm notification-api:latest make type-check
  test-serial:
    runs-on: ubuntu-latest
    needs: build
    services:
      redis:
        image: redis
        ports:
        - 6380:6379
      postgres:
        image: postgres:13.4
        env:
          POSTGRES_DB: test_notification_api
        ports:
        - 5432:5432
    steps:
      - uses: docker/setup-buildx-action@v2
      - uses: actions/cache@v3
        with:
          path: /tmp/notification-api.tar
          key: ${{ github.sha }}-api
      - run: docker load --input /tmp/notification-api.tar
      - run: |
          docker run \
            -e SQLALCHEMY_TEST_DATABASE_URI="${{ env.SQLALCHEMY_TEST_DATABASE_URI }}" \
            -v /var/run/docker.sock:/var/run/docker.sock \
            --rm notification-api:latest \
            make test-serial
  test-concurrent:
    runs-on: ubuntu-latest
    needs: build
    services:
      redis:
        image: redis
        ports:
        - 6380:6379
      postgres:
        image: postgres:13.4
        env:
          POSTGRES_DB: test_notification_api
          POSTGRES_PASSWORD: postgres
        ports:
        - 5432:5432
    steps:
      - uses: docker/setup-buildx-action@v2
      - uses: actions/cache@v3
        with:
          path: /tmp/notification-api.tar
          key: ${{ github.sha }}-api
      - run: docker load --input /tmp/notification-api.tar
      - run: |
          docker run \
            -e SQLALCHEMY_TEST_DATABASE_URI="${{ env.SQLALCHEMY_TEST_DATABASE_URI }}" \
            -v /var/run/docker.sock:/var/run/docker.sock \
            --rm notification-api:latest \
            make test-concurrent
